generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Events {
  id          String        @id
  name        String
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  url         String?       @default("https://pvotaaukwfeabaqtahfu.supabase.co/storage/v1/object/public/picsa/frame_picsa.png")
  userId      String?
  User        User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  GuestEvents GuestEvents[]
  Images      Images[]

  @@index([userId])
}

model GuestEvents {
  id      String  @id
  userId  String?
  eventId String?
  Events  Events? @relation(fields: [eventId], references: [id], onDelete: Cascade)
  User    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Images {
  id        String   @id
  name      String
  userId    String
  eventId   String
  createdAt DateTime @default(now())
  url       String
  Events    Events   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, eventId])
}

model User {
  id              String            @id
  email           String            @unique
  name            String?
  createdAt       DateTime          @default(now())
  url             String?
  pro             Boolean?          @default(false)
  token           String?           @default("token")
  payment         Json?             @default("{     \"pro\" : false,     \"title\": \"Free Plan\",     \"price\": \"0\",     \"expiration\": \"never\",     \"currency\": \"USD\",     \"transactionId\": \"0\" }") @db.Json
  Events          Events[]
  GuestEvents     GuestEvents[]
  Images          Images[]
  payments        payment[]
  payment_sandbox payment_sandbox[]
}

model Insights {
  goal1      String?
  goal2      String?
  goal3      String?
  url        String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  phone      String?
  id         String   @id
}

model Inyuatuser {
  id        String   @id
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model payment {
  amount         Decimal? @db.Decimal
  store          String?
  user_id        String?
  environment    String?
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  type           String?
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscriber     Json?    @db.Json
  product        Json?    @db.Json
  transaction_id String?
  expiration     String?
  app            String?
  currency       String?
  User           User?    @relation(fields: [user_id], references: [id], onDelete: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model payment_sandbox {
  amount         Decimal? @db.Decimal
  store          String?
  user_id        String?
  environment    String?
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  type           String?
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscriber     Json?    @db.Json
  product        Json?    @db.Json
  transaction_id String?
  expiration     String?
  app            String?
  currency       String?
  User           User?    @relation(fields: [user_id], references: [id], onDelete: NoAction)
}
